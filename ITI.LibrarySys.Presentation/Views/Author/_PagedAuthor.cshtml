@using X.PagedList.Web.Common
<div id="PagedAuthors">
    @model IPagedList<Author>
    @if(User.IsInRole("Editor")){
        <p>
            <a asp-action="Create" asp-controller="Author" class="btn btn-primary">Create New</a>
        </p>
    }
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">CRUD Operations</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (Author a in Model)
                {
                    <tr>
                        <th scope="row">@a.ID</th>
                        <td>@a.Name</td>
                        <td>
                            <a asp-action="Details" asp-controller="Author" asp-route-id="@a.ID" class="btn btn-info">Details</a>
                            @if(User.IsInRole("Editor")){
                                <a asp-action="Edit" asp-controller="Author" asp-route-id="@a.ID" class="btn btn-info">Edit</a>
                                <a asp-action="Delete" asp-controller="Author" asp-route-id="@a.ID" class="btn btn-danger">Delete</a>
                            }
                    </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div style="padding:10px;">
        @*for pagenation*@
        @Html.PagedListPager(
        Model, /*the data*/
        pageIndex => Url.Action("PagedAuthor", new { pageIndex }), /*the execution of pagenation*/
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(   /*Replace going to server*/
        new PagedListRenderOptions(){MaximumPageNumbersToDisplay=5}, /*Controlling the size of pagenation*/
        new AjaxOptions{HttpMethod="Get", UpdateTargetId="PagedAuthor"} /*Getting data and put it in the div of id=PagedBooks*/
        )
        )
    </div>
    <a asp-action="Index" asp-controller="Home" class="btn btn-primary">Back to Home</a>
</div>
